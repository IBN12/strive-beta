(()=>{"use strict";var n={159:(n,t,e)=>{e.d(t,{A:()=>s});var a=e(354),o=e.n(a),i=e(314),r=e.n(i)()(o());r.push([n.id,":root{\n    --battleStationHalfWidth:0px; \n}\n/* body - The main body for the browser. */\nbody{\n    padding: 0;\n    margin: 0; \n}\n\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box;\n}\n\n.no-clicks{\n    pointer-events: none; \n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* |Mobile Viewports| */\n@media screen and (max-width: 600px){\n    /* |Main Content| */\n    #content{\n        border: 1px solid red; \n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n\n        border: 1px solid blue;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid  orange; \n        margin-top: 10px;\n        padding: 3px;\n    }\n\n    .display-shuffled-cards{ /* Display Shuffled Cards */\n        display: flex; \n        gap: 3px;\n\n        padding: 10px;\n        border: 1px solid green; \n    }\n    .display-shuffled-cards > div{ /* Cards in the 'display shuffled cards' */ \n        flex: 1;\n\n        text-align: center; \n        font-size: 11px; \n        border: 1px solid purple;\n        height: 80px;\n    }\n    .shuffle-card-animation{ /* shuffle card animation for 'display shuffled cards' */\n        animation-name: shuffle-card-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-card-anim{\n        from{\n            transform: scale(1);\n        }\n        to{\n            transform: scale(1.2); \n        }\n    }\n\n    .view-card{ /* View cards in 'display shuffled cards'*/\n        position: absolute;\n        top: 0;\n        right: 0; \n        width: 100%;\n        height: 400px; \n        padding: 5px;\n        border: 1px solid black; \n        background-color: rgba(0, 0, 0, 0.658);\n    }\n    .open-view-card{\n        animation-name: open-view-card-anim;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes open-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n        to{\n            transform: perspective(800px) translate3d(0,0,0);\n        }\n    }\n    .close-view-card{\n        animation-name: close-view-card-anim; \n        animation-duration: .5s; \n        animation-timing-function: ease-in;\n        will-change: transform; \n    }\n    @keyframes close-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, 0); \n        }\n        to{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n    }\n    .view-card > div{ \n        display: flex;\n        justify-content: end;\n\n        border: 1px solid orange; \n    }\n    .view-card > div > img[src]{ /* Close Button */\n        height: 50px;\n    }\n\n    .display-number-of-shuffles{ /* Display Number of Shuffles */\n        border: 1px solid black;\n        text-align: center; \n    }\n    .shuffle-limit-reached{ /* Shuffle Limit Reached */\n        animation-name: shuffle-limit-reached-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-limit-reached-anim{\n        from{\n            transform: scale(1); \n            border-color: initial;\n        }\n        to{\n            transform: scale(1.1);  \n            border-color: red; \n        }\n    }\n\n    /* |Loading Room Content| */\n    .loading-room-content{\n        border: 1px solid purple; \n        margin-top: 10px; \n        padding: 3px;\n    }\n\n    /* |Battle Arena Content| */\n    .battle-arena-content{ \n        display: flex; \n        flex-direction: column; \n        gap: 10px; \n\n        border: 1px solid lightcoral;\n        margin-top: 10px;\n        padding: 3px; \n    }\n    .singularity-point-station{ /* Singularity Point Station */\n        display: flex;\n\n        border: 1px solid darkorange; \n        padding: 3px; \n    }\n    .singularity-point-station > div{ /* User Singularity Points & Comp Singularity Points */\n        flex: 1; \n\n        border: 1px solid red;\n        text-align: center;\n    }\n    .battle-station{ /* Battle Station */\n        display: flex;\n        justify-content: space-between; \n        gap: 100px;\n\n        border: 1px solid blue;\n        padding: 3px;\n    }\n    .battle-station > div{ /* User & Computer battle card */\n        border: 1px solid black;\n        height: 80px; /* Testing width */\n        width: 80px; /* Testing height */\n    }\n\n    .card-deck-station{ /* Card Deck Station */\n        display: flex;\n        justify-content: space-between;\n        gap: 5px;\n\n        border: 1px solid darkgreen;\n        padding: 3px;\n    }\n    .card-deck-station > div:nth-child(1){ /* User Deck Station */\n        display: flex;\n        gap: 5px;\n\n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(1) > div{ /* User cards in deck station */ \n        text-align: center; \n        border: 1px solid red;\n        font-size: 8px;\n        width: 30px; /* Testing width */\n    }\n\n    .card-deck-station > div:nth-child(2){ /* Comp Deck Station */\n        display: flex;\n        gap: 5px;\n        \n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(2) > div{ /* Comp cards in deck station */\n        text-align: center;\n        border: 1px solid blue;\n        font-size: 8px;\n        width: 30px;  /* Testing width */ \n    }\n\n    .card-stat-station{ /* Card Stat Station */\n        display: flex; \n        justify-content: space-around; \n        gap: 100px; \n\n        border: 1px solid yellowgreen; \n        padding: 2px; \n    }\n    .card-stat-station > div /* User & Comp Card Stats */\n    {\n        border: 1px solid black; \n        font-size: 15px;\n        padding: 3px; \n    }\n\n    .control-station{ /* Control Station */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid darkcyan;\n        padding: 2px; \n    }\n\n    .user-atk-movement{ /* User Attack Movement */\n        animation-name: userAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes userAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth)); \n        }\n    }\n\n    .damage-container{ /* User Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        top: 450px; /* Will need to change later due to testing placements. */\n        animation-name: damageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards; \n    }\n    @keyframes damageContainerAnim{\n        from{\n            transform: translate3d(0,0,0);\n        }\n        to{\n            transform: translate3d(-120px, -20px, 300px);\n        }\n    }\n\n    .comp-atk-movement{ /* Computer Attack Movement */\n        animation-name: compAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        will-change: transform;\n    }\n    @keyframes compAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth));\n        }\n    }\n\n    .comp-damage-container{ /* Computer Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        top: -10px;\n        right: 300px;\n        animation-name: compDamageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes compDamageContainerAnim{\n        from{\n            transform: translate3d(0,0,0);\n        }\n        to{\n            transform: translate3d(140px, -30px, 300px); \n        }\n    }\n    \n    .death{ /* Death for User|Comp Cards. */\n        background-color: red;\n        animation-name: deathAnim;\n        animation-duration: .6s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes deathAnim{\n        0%{\n            transform: rotateX(0);\n        }\n        20%{\n            transform: rotateX(90deg);\n        }\n        40%{\n            transform: rotateX(0);\n        }\n        60%{\n            transform: rotateX(90deg);\n        }\n        80%{\n            transform: rotateX(0); \n        }\n        100%{\n            transform: rotateX(90deg); \n        }\n    }\n\n    .critical-hit-damage{ /* Critical Hit Damage Animation */\n        animation-name: criticalHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes criticalHitDmgAnim{\n        0%{\n            transform: rotateY(60deg);\n        }\n        30%{\n            transform: rotateY(0);\n        }\n        50%{\n            transform: rotateY(-60deg);\n        }\n        70%{\n            transform: rotateY(0);\n        }\n        100%{\n            transform: rotateY(60deg); \n        }\n    }\n\n    .regular-hit-damage{ /* Regular Hit Damage Animation */\n        animation-name: regularHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes regularHitDmgAnim{\n        0%{\n            transform: rotateY(30deg); \n        }\n        50%{\n            transform: rotateY(0); \n        }\n        70%{\n            transform: rotateY(-30deg); \n        }\n        100%{\n            transform: rotateY(0); \n        }\n    }\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"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",sourcesContent:[":root{\n    --battleStationHalfWidth:0px; \n}\n/* body - The main body for the browser. */\nbody{\n    padding: 0;\n    margin: 0; \n}\n\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box;\n}\n\n.no-clicks{\n    pointer-events: none; \n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* |Mobile Viewports| */\n@media screen and (max-width: 600px){\n    /* |Main Content| */\n    #content{\n        border: 1px solid red; \n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n\n        border: 1px solid blue;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid  orange; \n        margin-top: 10px;\n        padding: 3px;\n    }\n\n    .display-shuffled-cards{ /* Display Shuffled Cards */\n        display: flex; \n        gap: 3px;\n\n        padding: 10px;\n        border: 1px solid green; \n    }\n    .display-shuffled-cards > div{ /* Cards in the 'display shuffled cards' */ \n        flex: 1;\n\n        text-align: center; \n        font-size: 11px; \n        border: 1px solid purple;\n        height: 80px;\n    }\n    .shuffle-card-animation{ /* shuffle card animation for 'display shuffled cards' */\n        animation-name: shuffle-card-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-card-anim{\n        from{\n            transform: scale(1);\n        }\n        to{\n            transform: scale(1.2); \n        }\n    }\n\n    .view-card{ /* View cards in 'display shuffled cards'*/\n        position: absolute;\n        top: 0;\n        right: 0; \n        width: 100%;\n        height: 400px; \n        padding: 5px;\n        border: 1px solid black; \n        background-color: rgba(0, 0, 0, 0.658);\n    }\n    .open-view-card{\n        animation-name: open-view-card-anim;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes open-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n        to{\n            transform: perspective(800px) translate3d(0,0,0);\n        }\n    }\n    .close-view-card{\n        animation-name: close-view-card-anim; \n        animation-duration: .5s; \n        animation-timing-function: ease-in;\n        will-change: transform; \n    }\n    @keyframes close-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, 0); \n        }\n        to{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n    }\n    .view-card > div{ \n        display: flex;\n        justify-content: end;\n\n        border: 1px solid orange; \n    }\n    .view-card > div > img[src]{ /* Close Button */\n        height: 50px;\n    }\n\n    .display-number-of-shuffles{ /* Display Number of Shuffles */\n        border: 1px solid black;\n        text-align: center; \n    }\n    .shuffle-limit-reached{ /* Shuffle Limit Reached */\n        animation-name: shuffle-limit-reached-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-limit-reached-anim{\n        from{\n            transform: scale(1); \n            border-color: initial;\n        }\n        to{\n            transform: scale(1.1);  \n            border-color: red; \n        }\n    }\n\n    /* |Loading Room Content| */\n    .loading-room-content{\n        border: 1px solid purple; \n        margin-top: 10px; \n        padding: 3px;\n    }\n\n    /* |Battle Arena Content| */\n    .battle-arena-content{ \n        display: flex; \n        flex-direction: column; \n        gap: 10px; \n\n        border: 1px solid lightcoral;\n        margin-top: 10px;\n        padding: 3px; \n    }\n    .singularity-point-station{ /* Singularity Point Station */\n        display: flex;\n\n        border: 1px solid darkorange; \n        padding: 3px; \n    }\n    .singularity-point-station > div{ /* User Singularity Points & Comp Singularity Points */\n        flex: 1; \n\n        border: 1px solid red;\n        text-align: center;\n    }\n    .battle-station{ /* Battle Station */\n        display: flex;\n        justify-content: space-between; \n        gap: 100px;\n\n        border: 1px solid blue;\n        padding: 3px;\n    }\n    .battle-station > div{ /* User & Computer battle card */\n        border: 1px solid black;\n        height: 80px; /* Testing width */\n        width: 80px; /* Testing height */\n    }\n\n    .card-deck-station{ /* Card Deck Station */\n        display: flex;\n        justify-content: space-between;\n        gap: 5px;\n\n        border: 1px solid darkgreen;\n        padding: 3px;\n    }\n    .card-deck-station > div:nth-child(1){ /* User Deck Station */\n        display: flex;\n        gap: 5px;\n\n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(1) > div{ /* User cards in deck station */ \n        text-align: center; \n        border: 1px solid red;\n        font-size: 8px;\n        width: 30px; /* Testing width */\n    }\n\n    .card-deck-station > div:nth-child(2){ /* Comp Deck Station */\n        display: flex;\n        gap: 5px;\n        \n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(2) > div{ /* Comp cards in deck station */\n        text-align: center;\n        border: 1px solid blue;\n        font-size: 8px;\n        width: 30px;  /* Testing width */ \n    }\n\n    .card-stat-station{ /* Card Stat Station */\n        display: flex; \n        justify-content: space-around; \n        gap: 100px; \n\n        border: 1px solid yellowgreen; \n        padding: 2px; \n    }\n    .card-stat-station > div /* User & Comp Card Stats */\n    {\n        border: 1px solid black; \n        font-size: 15px;\n        padding: 3px; \n    }\n\n    .control-station{ /* Control Station */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid darkcyan;\n        padding: 2px; \n    }\n\n    .user-atk-movement{ /* User Attack Movement */\n        animation-name: userAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes userAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth)); \n        }\n    }\n\n    .damage-container{ /* User Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        top: 450px; /* Will need to change later due to testing placements. */\n        animation-name: damageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards; \n    }\n    @keyframes damageContainerAnim{\n        from{\n            transform: translate3d(0,0,0);\n        }\n        to{\n            transform: translate3d(-120px, -20px, 300px);\n        }\n    }\n\n    .comp-atk-movement{ /* Computer Attack Movement */\n        animation-name: compAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        will-change: transform;\n    }\n    @keyframes compAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth));\n        }\n    }\n\n    .comp-damage-container{ /* Computer Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        top: -10px;\n        right: 300px;\n        animation-name: compDamageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes compDamageContainerAnim{\n        from{\n            transform: translate3d(0,0,0);\n        }\n        to{\n            transform: translate3d(140px, -30px, 300px); \n        }\n    }\n    \n    .death{ /* Death for User|Comp Cards. */\n        background-color: red;\n        animation-name: deathAnim;\n        animation-duration: .6s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes deathAnim{\n        0%{\n            transform: rotateX(0);\n        }\n        20%{\n            transform: rotateX(90deg);\n        }\n        40%{\n            transform: rotateX(0);\n        }\n        60%{\n            transform: rotateX(90deg);\n        }\n        80%{\n            transform: rotateX(0); \n        }\n        100%{\n            transform: rotateX(90deg); \n        }\n    }\n\n    .critical-hit-damage{ /* Critical Hit Damage Animation */\n        animation-name: criticalHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes criticalHitDmgAnim{\n        0%{\n            transform: rotateY(60deg);\n        }\n        30%{\n            transform: rotateY(0);\n        }\n        50%{\n            transform: rotateY(-60deg);\n        }\n        70%{\n            transform: rotateY(0);\n        }\n        100%{\n            transform: rotateY(60deg); \n        }\n    }\n\n    .regular-hit-damage{ /* Regular Hit Damage Animation */\n        animation-name: regularHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes regularHitDmgAnim{\n        0%{\n            transform: rotateY(30deg); \n        }\n        50%{\n            transform: rotateY(0); \n        }\n        70%{\n            transform: rotateY(-30deg); \n        }\n        100%{\n            transform: rotateY(0); \n        }\n    }\n}"],sourceRoot:""}]);const s=r},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",a=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),a&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),a&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,a,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(r[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);a&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},354:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:n=>{var t=[];function e(n){for(var e=-1,a=0;a<t.length;a++)if(t[a].identifier===n){e=a;break}return e}function a(n,a){for(var i={},r=[],s=0;s<n.length;s++){var d=n[s],c=a.base?d[0]+a.base:d[0],l=i[c]||0,A="".concat(c," ").concat(l);i[c]=l+1;var m=e(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)t[m].references++,t[m].updater(u);else{var C=o(u,a);a.byIndex=s,t.splice(s,0,{identifier:A,updater:C,references:1})}r.push(A)}return r}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=a(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var s=e(i[r]);t[s].references--}for(var d=a(n,o),c=0;c<i.length;c++){var l=e(i[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=d}}},659:n=>{var t={};n.exports=function(n,e){var a=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var a="";e.supports&&(a+="@supports (".concat(e.supports,") {")),e.media&&(a+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(a+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),a+=e.css,o&&(a+="}"),e.media&&(a+="}"),e.supports&&(a+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(a,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},113:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(a){var o=t[a];if(void 0!==o)return o.exports;var i=t[a]={id:a,exports:{}};return n[a](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var a in t)e.o(t,a)&&!e.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:t[a]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var a=t.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0;let a=[],o=[{name:"Tobo The Fighter",cate:"supra",atk:44,def:12,esse:100,tempName:"Tobo",beenHit:!1},{name:"The One From System",cate:"supra",atk:46,def:10,esse:100,tempName:"Jace",beenHit:!1},{name:"Spunky With The Funky Draco",cate:"supra",atk:39,def:11,esse:100,tempName:"Spunky",beenHit:!1},{name:"The Trendsetter Rotao",cate:"fere",atk:25,def:18,esse:100,tempName:"Rotao",beenHit:!1},{name:"Allybelle",cate:"fere",atk:27,def:15,esse:100,tempName:"Ally",beenHit:!1},{name:"The Experiment",cate:"fere",atk:24,def:13,esse:100,tempName:"Mason",beenHit:!1},{name:"Dan The Prol",cate:"bonum",atk:19,def:22,esse:100,tempName:"Dan",beenHit:!1},{name:"Mac The Rat",cate:"bonum",atk:13,def:28,esse:100,tempName:"Mac",beenHit:!1},{name:"A Karen",cate:"bonum",atk:15,def:26,esse:100,tempName:"Karen",beenHit:!1},{name:"The office Worker Ken",cate:"bonum",atk:16,def:25,esse:100,tempName:"Ken",beenHit:!1}];function i(){let n=[],t=[],e=[],a=[],i=[];return o.forEach((n=>{"supra"===n.cate?t.push(n):"fere"===n.cate?e.push(n):"bonum"===n.cate&&a.push(n)})),n.push(t[function(n){return Math.floor(Math.random()*n.length)}(t)]),n.push(e[function(n){return Math.floor(Math.random()*n.length)}(e)]),i=function(n){let t=!1,e=[],a=Math.floor(Math.random()*n.length);for(e.push(a);!t;)a=Math.floor(Math.random()*n.length),e.includes(a)||(e.push(a),t=!0);return e}(a),i.forEach((t=>{n.push(a[t])})),n}let r={numOfShuffles:0,endShuffles:!1,commenceShuffleAnim:!1,mainBattleCard:null,switchCard:null,singularityPoints:0};const s=e.p+"8d8048858a47def2e8d1.svg";function d(n){const t=document.querySelector(".shuffle-cards-content"),e=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),a=document.querySelector(".display-number-of-shuffles"),o=document.querySelector(".shuffle-cards-content > button:nth-child(4)");0===n?(t.replaceChildren(),c(),m(),C(),p()):1===n?(t.removeChild(e),t.removeChild(a),t.removeChild(o),m(),C(),p()):null===n&&(c(),m(),C(),p())}function c(){const n=document.querySelector(".shuffle-cards-content"),t=document.createElement("div");t.classList.add("display-shuffled-cards");for(let n=0;n<4;n++){const e=document.createElement("div");t.appendChild(e),0===a.length?e.textContent="No Card":(e.textContent=`${a[n].name}`,e.addEventListener("click",l))}n.appendChild(t)}function l(n){const t=document.getElementById("content"),e=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),a=document.querySelector(".shuffle-cards-content > button:nth-child(4)");document.querySelector(".display-shuffled-cards").classList.add("no-clicks"),e.disabled=!0,a.disabled=!0;const o=document.createElement("div");o.classList.add("view-card"),o.classList.add("open-view-card");const i=document.createElement("div"),r=document.createElement("img");r.alt="View Card Close Button",r.src=s,r.addEventListener("click",A);const d=document.createElement("div"),c=document.createElement("div");c.textContent=n.target.textContent,o.appendChild(i),o.appendChild(d),i.appendChild(r),d.appendChild(c),t.appendChild(o)}function A(n){const t=document.getElementById("content"),e=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),a=document.querySelector(".shuffle-cards-content > button:nth-child(4)"),o=document.querySelector(".display-shuffled-cards"),i=document.querySelector(".view-card");i.classList.remove("open-view-card"),i.classList.add("close-view-card"),e.disabled=!1,a.disabled=!1,setTimeout((()=>{t.removeChild(i)}),500),setTimeout((()=>{o.classList.remove("no-clicks")}),700)}function m(){const n=document.querySelector(".shuffle-cards-content"),t=document.createElement("button");t.textContent="Shuffle",t.addEventListener("click",u),n.appendChild(t)}function u(){r.endShuffles?d(1):(document.querySelector(".shuffle-cards-content > button:nth-child(2)").disabled=!0,document.querySelector(".shuffle-cards-content > button:nth-child(4)").disabled=!0,a.length=0,a=i(),console.log("New User Deck: ",a),console.log("\n"),document.querySelectorAll(".display-shuffled-cards > div").forEach(((n,t)=>{switch(t){case 0:n.classList.add("shuffle-card-animation"),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),1e3);break;case 1:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),1e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),2e3);break;case 2:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),2e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),3e3);break;case 3:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),3e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),4e3);break;default:return}})),setTimeout((()=>{d(0)}),5e3))}function C(){const n=document.querySelector(".shuffle-cards-content"),t=document.createElement("div");t.classList.add("display-number-of-shuffles"),t.textContent=`Shuffles: ${r.numOfShuffles}`,r.numOfShuffles>=3?(t.classList.add("shuffle-limit-reached"),r.endShuffles=!0):r.numOfShuffles++,n.appendChild(t)}function p(){const n=document.querySelector(".shuffle-cards-content"),t=document.createElement("button");t.textContent="Start Game",t.addEventListener("click",(()=>{console.log("TO: ShuffleComputerCards() - Loading Room")})),n.appendChild(t)}let f={numOfDuplicates:0,stopDuplicateTest:!1,newCompDeck:[],mainBattleCard:null,singularityPoints:0,cardSwitches:0,cardsToSwitch:[]};function h(){return f.stopDuplicateTest||(f.newCompDeck=JSON.parse(JSON.stringify(i()))),console.log("Comp Deck: ",f.newCompDeck),console.log("User Deck: ",a),f.newCompDeck.forEach((n=>{for(let t=0;t<a.length;t++)n.name===a[t].name&&(console.log("Comp Deck Duplicate: ",n.name),f.numOfDuplicates++)})),console.log("\n"),f.numOfDuplicates>=2?(f.numOfDuplicates=0,h()):f.stopDuplicateTest=!0,f.newCompDeck}let B=[];function g(n,t){"user"===t?function(n){0===n?r.singularityPoints+=0:n===Number((1/3).toFixed(1))?r.singularityPoints+=10:.5===n?r.singularityPoints+=20:n===Number((2/3).toFixed(1))?r.singularityPoints+=30:n===3/4?r.singularityPoints+=50:1===n&&(r.singularityPoints+=80)}(n):function(n){0===n?f.singularityPoints+=0:n===Number((1/3).toFixed(1))?f.singularityPoints+=10:.5===n?f.singularityPoints+=20:n===Number((2/3).toFixed(1))?f.singularityPoints+=30:n===3/4?f.singularityPoints+=50:1===n&&(f.singularityPoints+=80)}(n)}function x(n,t){return"user"===n?function(n){if("Attack"===n){const n=2/3,t=[Number((1/3).toFixed(1)),.5,0,Number(n.toFixed(1)),3/4,1,0],e=v(t.length);return g(t[e],"user"),f.mainBattleCard.esse=f.mainBattleCard.esse-r.mainBattleCard.atk*t[e],f.mainBattleCard.esse=Math.trunc(f.mainBattleCard.esse),f.mainBattleCard.esse<=0&&(f.mainBattleCard.esse=0),0===f.cardSwitches&&0!==t[e]&&B.forEach((n=>{n.name===f.mainBattleCard.name&&(n.beenHit=!0)})),0===t[e]?"Miss!":1===t[e]?`${r.mainBattleCard.atk} Critial Hit!`:`${Math.trunc(r.mainBattleCard.atk*t[e])} Damage!`}}(t):function(n){if("Attack"===n){const n=2/3,t=[Number((1/3).toFixed(1)),.5,0,Number(n.toFixed(1)),3/4,1,0],e=v(t.length);return g(t[e],"comp"),r.mainBattleCard.esse=r.mainBattleCard.esse-f.mainBattleCard.atk*t[e],r.mainBattleCard.esse=Math.trunc(r.mainBattleCard.esse),r.mainBattleCard.esse<=0&&(r.mainBattleCard.esse=0),0===t[e]?"Miss!":1===t[e]?`${f.mainBattleCard.atk} Critical Hit!`:`${Math.trunc(f.mainBattleCard.atk*t[e])} Damage!`}}(t)}function v(n){return Math.floor(Math.random()*n)}function b(n){const t=document.querySelector(".battle-arena-content"),e=document.querySelector(".singularity-point-station"),a=document.querySelector(".battle-station"),o=document.querySelector(".card-stat-station"),i=document.querySelector(".card-deck-station"),s=document.querySelector(".control-station");null===n?(Q(),k(n),I(),E(),w()):1===n?(t.removeChild(e),t.removeChild(a),t.removeChild(o),t.removeChild(i),t.removeChild(s),Q(),k(n),I(),E(),w()):2===n?(t.removeChild(o),t.removeChild(i),t.removeChild(s),I(),E(),w(),y(2),setTimeout((()=>{b(3)}),1e3)):3===n?(t.removeChild(e),t.removeChild(a),t.removeChild(o),t.removeChild(i),t.removeChild(s),Q(),k(1),I(),E(),w(),y(2),function(){if(0===f.mainBattleCard.esse)document.querySelector(".battle-station > div:nth-child(2)").classList.add("death"),B.forEach(((n,t)=>{0===n.esse&&B.splice(t,1)})),0===B.length?setTimeout((()=>{b(6)}),2e3):setTimeout((()=>{b(4)}),2e3);else if(0===r.mainBattleCard.esse){const n=document.querySelector(".battle-station > div:nth-child(1)");console.log("The user card is dead: ",n)}}()):4===n?(t.removeChild(e),t.removeChild(a),t.removeChild(o),t.removeChild(i),t.removeChild(s),Q(),k(2),I(),E(),w(),y(2)):6===n&&(t.removeChild(e),t.removeChild(a),t.removeChild(o),t.removeChild(i),t.removeChild(s),Q(),k(3),I(),E(),w(),y(3))}function y(n){const t=document.querySelectorAll(".control-station > button"),e=document.querySelectorAll(".card-deck-station > div:nth-child(1) > div");2===n?(t.forEach((n=>{n.disabled=!0})),e.forEach((n=>{n.classList.add("no-clicks")})),setTimeout((()=>{t.forEach((n=>{n.disabled=!1})),e.forEach((n=>{n.classList.remove("no-clicks")}))}),2e3)):3===n&&(t.forEach((n=>{n.disabled=!0})),e.forEach((n=>{n.classList.add("no-clicks")})))}function Q(){const n=document.querySelector(".battle-arena-content"),t=document.createElement("div");t.classList.add("singularity-point-station");const e=document.createElement("div");e.textContent=`${r.singularityPoints} sp`;const a=document.createElement("div");a.textContent=`${f.singularityPoints} sp`,t.appendChild(e),t.appendChild(a),n.appendChild(t)}function k(n){const t=document.querySelector(".battle-arena-content"),e=document.createElement("div");e.classList.add("battle-station");const o=document.createElement("div");null===n?(r.mainBattleCard=a[0],o.textContent=r.mainBattleCard.name):(1===n||2===n||3===n)&&(o.textContent=r.mainBattleCard.name);const i=document.createElement("div");null===n?(f.mainBattleCard=B[0],i.textContent=f.mainBattleCard.name):1===n?i.textContent=f.mainBattleCard.name:2===n?(f.mainBattleCard=B[0],i.textContent=f.mainBattleCard.name):3===n&&(f.mainBattleCard=null,i.textContent="No Card"),e.appendChild(o),e.appendChild(i),t.appendChild(e)}function I(){const n=document.querySelector(".battle-arena-content"),t=document.createElement("div");t.classList.add("card-stat-station");const e=document.createElement("div");a.forEach((n=>{if(n.tempName===r.mainBattleCard.tempName){const t=document.createElement("div");t.textContent=`Name: ${n.tempName}`,e.appendChild(t);const a=document.createElement("div");a.textContent=`Cate: ${n.cate}`,e.appendChild(a);const o=document.createElement("div");o.textContent=`Atk: ${n.atk}`,e.appendChild(o);const i=document.createElement("div");i.textContent=`Def: ${n.def}`,e.appendChild(i);const r=document.createElement("div");r.textContent=`Esse: ${n.esse}`,e.appendChild(r)}}));const o=document.createElement("div");null===f.mainBattleCard?o.textContent="No Stats":B.forEach((n=>{if(n.tempName===f.mainBattleCard.tempName){const t=document.createElement("div");t.textContent=`Name: ${n.tempName}`,o.appendChild(t);const e=document.createElement("div");e.textContent=`Cate: ${n.cate}`,o.appendChild(e);const a=document.createElement("div");a.textContent=`Atk: ${n.atk}`,o.appendChild(a);const i=document.createElement("div");i.textContent=`Def: ${n.def}`,o.appendChild(i);const r=document.createElement("div");r.textContent=`Esse: ${n.esse}`,o.appendChild(r)}})),t.appendChild(e),t.appendChild(o),n.appendChild(t)}function E(){const n=document.querySelector(".battle-arena-content"),t=document.createElement("div");t.classList.add("card-deck-station");const e=document.createElement("div");for(let n=0;n<a.length;n++)if(r.mainBattleCard.name!==a[n].name){const t=document.createElement("div");t.textContent=a[n].tempName,e.appendChild(t),t.addEventListener("click",S)}const o=document.createElement("div");for(let n=0;n<B.length;n++)if(f.mainBattleCard.name!==B[n].name){const t=document.createElement("div");t.textContent=B[n].tempName,o.appendChild(t)}1!==B.length&&0!==B.length||(o.textContent="Empty Deck"),t.appendChild(e),t.appendChild(o),n.appendChild(t)}function S(n){r.switchCard=n.target.textContent,a.forEach((n=>{n.tempName===r.switchCard&&(r.mainBattleCard=n)})),b(1)}function w(){const n=document.querySelector(".battle-arena-content"),t=document.createElement("div");t.classList.add("control-station");const e=document.createElement("button");e.textContent="Attack",e.addEventListener("click",D);const a=document.createElement("button");a.textContent="Defend",t.appendChild(e),t.appendChild(a),n.appendChild(t)}function D(n){if("Attack"===n.target.textContent){const t=document.querySelector(".battle-station");document.documentElement.style.setProperty("--battleStationHalfWidth",t.clientWidth/4+"px"),document.querySelector(".battle-station > div:nth-child(1)").classList.add("user-atk-movement");const e=document.querySelector(".battle-station > div:nth-child(2)");document.querySelector(".control-station > button:nth-child(1)").disabled=!0,document.querySelector(".control-station > button:nth-child(2)").disabled=!0,document.querySelectorAll(".card-deck-station > div:nth-child(1) > div").forEach((n=>{n.classList.add("no-clicks")}));const a=x("user",n.target.textContent);setTimeout((()=>{const n=document.createElement("div");n.classList.add("damage-container"),n.textContent=a,e.appendChild(n),Y(a,e,r),b(2)}),500)}0!==f.mainBattleCard.esse&&setTimeout((()=>{!function(){const n=document.querySelector(".battle-station"),t=document.querySelector(".battle-station > div:nth-child(2)"),e=document.querySelector(".battle-station > div:nth-child(1)");0===f.cardSwitches&&B.forEach((n=>{n.name===f.mainBattleCard.name&&"supra"===n.cate&&!0===n.beenHit&&(f.cardSwitches=5,n.beenHit=!1)}));const a="Attack",o=["Attack","Switch"];if(f.cardSwitches>0){const i=Math.floor(Math.random()*o.length);if("Attack"===o[i]){document.documentElement.style.setProperty("--battleStationHalfWidth",-n.clientWidth/4+"px"),t.classList.add("comp-atk-movement");const o=x("computer",a);console.log("Computer Attack: ",o),console.log("\n"),setTimeout((()=>{const n=document.createElement("div");n.classList.add("comp-damage-container"),n.textContent=o,t.appendChild(n),Y(o,e,f),b(2)}),500)}else"Switch"===o[i]&&(f.cardSwitches--,console.log("Computer Card Switches Left: ",f.cardSwitches),function(n){if("Switch"===n){B.forEach((n=>{n.name!==f.mainBattleCard.name&&f.cardsToSwitch.push(n)}));const n=Math.floor(Math.random()*f.cardsToSwitch.length);f.mainBattleCard=f.cardsToSwitch[n]}}(o[i]),setTimeout((()=>{b(1)}),500))}else{{document.documentElement.style.setProperty("--battleStationHalfWidth",-n.clientWidth/4+"px"),t.classList.add("comp-atk-movement");const o=x("computer",a);console.log("Computer Attack: ",o),console.log("\n"),setTimeout((()=>{const n=document.createElement("div");n.classList.add("comp-damage-container"),n.textContent=o,t.appendChild(n),Y(o,e,f),b(2)}),500)}}}()}),3e3)}function Y(n,t,e){if("Miss!"===n);else{let a=n.slice(0,2);a=Number(a),a===e.mainBattleCard.atk?t.classList.add("critical-hit-damage"):t.classList.add("regular-hit-damage")}}const q=e.p+"ae039dd38d82f83f7e0f.wav";var T=e(72),M=e.n(T),L=e(825),N=e.n(L),H=e(659),P=e.n(H),U=e(56),j=e.n(U),z=e(540),W=e.n(z),O=e(113),R=e.n(O),X=e(159),$={};$.styleTagTransform=R(),$.setAttributes=j(),$.insert=P().bind(null,"head"),$.domAPI=N(),$.insertStyleElement=W(),M()(X.A,$),X.A&&X.A.locals&&X.A.locals,console.log("|Strive Beta|"),console.log("Developer: SoSu Studios"),console.log("Programmer: IBE"),console.log("Start Date: July-24-2024"),console.log("\n"),function(){const n=document.getElementById("content"),t=document.createElement("div");t.classList.add("main-menu-content"),n.appendChild(t),function(){const n=document.querySelector(".main-menu-content"),t=document.createElement("h1");t.textContent="STRIVE",n.appendChild(t)}(),function(){const n=document.querySelector(".main-menu-content"),t=document.createElement("button");t.textContent="Quick Game",t.addEventListener("click",(()=>{console.log("TO: ShuffleCardsContent()")})),n.appendChild(t)}(),function(){const n=document.querySelector(".main-menu-content"),t=document.createElement("button");t.textContent="Settings",n.appendChild(t)}(),function(){const n=document.querySelector(".main-menu-content"),t=document.createElement("button");t.textContent="SoSu Studio",n.appendChild(t)}()}(),function(){const n=document.getElementById("content"),t=document.createElement("div");t.classList.add("shuffle-cards-content"),n.appendChild(t)}(),function(){const n=document.getElementById("content"),t=document.createElement("div");t.classList.add("loading-room-content"),n.appendChild(t)}(),function(){const n=document.getElementById("content"),t=document.createElement("div");t.classList.add("battle-arena-content"),n.appendChild(t)}(),d(null);const J=document.getElementById("content"),F=document.createElement("button");F.textContent="Test Button",F.addEventListener("click",(function(){console.log("If control 1: Loading up the computer deck."),B=[...h()],0!==B.length&&(console.log("Battle Arena will initiated in 10 seconds"),b(null));const n=new Audio(q);n.play(),n.volume=.1})),J.appendChild(F)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,