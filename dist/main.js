(()=>{"use strict";var n={159:(n,e,t)=>{t.d(e,{A:()=>m});var a=t(354),o=t.n(a),i=t(314),r=t.n(i),s=t(417),d=t.n(s),l=new URL(t(188),t.b),c=r()(o()),A=d()(l);c.push([n.id,`:root{\n    --battleStationHalfWidth:0px; \n    --inGameMenuWindowY: 0px; \n}\n/* body - The main body for the browser. */\nbody{\n    padding: 0;\n    margin: 0; \n}\n\n/* |Fonts| */\n/* Font-0 - New Amsterdam */\n@font-face {\n    font-family: new-amsterdam;\n    src: url(${A});\n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box;\n}\n\n.no-clicks{\n    pointer-events: none; \n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* |Mobile Viewports| */\n@media screen and (max-width: 600px){\n    /* |Main Content| */\n    #content{\n        border: 1px solid red; \n        background-color: #ef4444;\n        padding: 5px; \n        height: 100vh;\n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n\n        border: 1px solid blue;\n        background-color: #ef4444; \n    }\n    .main-menu-content > h1{ /* Game Logo */\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        letter-spacing: 5px;\n        color: #fbbf24;\n    }\n    .main-menu-content > button{ /* Quick Game|Settings|SoSu Studio */\n        border-radius: 10px; \n        width: 50%; \n        padding: 5px 10px 5px 10px;\n        background-color: #fbbf24;\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        font-size: 15px;\n    }\n\n    /* |In Game Menu Content| */\n    .in-game-menu-content{\n        /* border: 1px solid green; */\n        padding: 3px;\n    }\n    .in-game-menu-content > div{ /* In Game Menu Container */\n        display: flex;\n        justify-content: end;\n        align-items: center;   \n\n        border: 1px solid #fbbf24;\n        border-radius: 10px; \n        background-color: #fbbf24;\n        padding: 3px; \n    }\n    .in-game-menu-content > div > img[src]{ /* In Game Menu Button Image */\n        width: 40px; \n        transition-property: transform;\n        transition-duration: .5s;\n        /* transition-timing-function: ease-in-out; */\n        /* border: 1px solid black; */\n    }\n    .rotate-in-game-menu{ /* Rotates the In Game Menu Button Image */\n        transform: rotate(90deg); \n    }\n    .in-game-menu-window{ /* In Game Menu Window */\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        position: relative;\n        border: 1px solid #fbbe24b6;\n        border-radius: 10px;\n        background-color: #fbbe24b6;\n        height: 100%;\n        padding: 20px; \n    }\n    .in-game-menu-window > div{ /* In Game Menu Window|Close Window Container */\n        display: flex;\n        justify-content: end;\n        align-items: center; \n        \n        border: 1px solid #ef4444;\n        border-radius: 10px;  \n        background-color: #ef4444; \n        padding: 3px;\n    }\n    .in-game-menu-window > div > img[src]{ /* In Game Menu Window|Close Window Container|Close Window Button Image */\n        width: 40px; \n    }\n    .in-game-menu-selection-container{ /* In Game Menu Window| Menu Selection Container */\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n\n        border: 1px solid black;\n        padding: 5px;\n    }\n    .in-game-menu-selection-container > button { /* Each button for the game menu. */\n        width: 50%;  \n        padding: 5px 10px 5px 10px; \n        border-radius: 10px; \n        background-color: #fbbf24; \n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        font-size: 15px;\n    }\n    .open-in-game-menu-window{ /* Will open the In Game Menu Window. */\n        animation-name: openInGameMenuWindowAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease;\n        animation-fill-mode: forwards; \n    }\n    @keyframes openInGameMenuWindowAnim{\n        from{\n            transform: translate3d(-200px, 600px, 300px); \n        }\n        to{\n            transform: translate3d(0, var(--inGameMenuWindowY), 0);\n        }\n    }\n    .close-in-game-menu-window{ /* Will close the In Game Menu Window. */\n        animation-name: closeInGameMenuWindowAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeInGameMenuWindowAnim{\n        from{\n            transform: translate3d(0, -270px, 0);\n        }\n        to{\n            transform: translate3d(-200px, 600px, 300px); \n        }\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid  orange; \n        border-radius: 10px; \n        background-color: #fbbf24;\n        margin-top: 10px;\n        padding: 3px;\n    }\n\n    .display-shuffled-cards{ /* Display Shuffled Cards */\n        display: flex; \n        gap: 3px;\n\n        padding: 10px;\n        /* border: 1px solid green;  */\n    }\n    .display-shuffled-cards > div{ /* Cards in the 'display shuffled cards' */ \n        flex: 1;\n\n        text-align: center; \n        font-size: 11px; \n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        border: 1px solid purple;\n        border-radius: 10px;\n        height: 80px;\n    }\n    .shuffle-card-animation{ /* shuffle card animation for 'display shuffled cards' */\n        animation-name: shuffle-card-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-card-anim{\n        from{\n            transform: scale(1);\n        }\n        to{\n            transform: scale(1.2); \n        }\n    }\n\n    .view-card{ /* View cards in 'display shuffled cards'*/\n        position: absolute;\n        top: 0;\n        right: 0; \n        width: 100%;\n        height: 400px; \n        padding: 5px;\n        border: 1px solid black; \n        background-color: rgba(0, 0, 0, 0.658);\n    }\n    .open-view-card{\n        animation-name: open-view-card-anim;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes open-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n        to{\n            transform: perspective(800px) translate3d(0,0,0);\n        }\n    }\n    .close-view-card{\n        animation-name: close-view-card-anim; \n        animation-duration: .5s; \n        animation-timing-function: ease-in;\n        will-change: transform; \n    }\n    @keyframes close-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, 0); \n        }\n        to{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n    }\n    .view-card > div{ \n        display: flex;\n        justify-content: end;\n\n        border: 1px solid orange; \n    }\n    .view-card > div > img[src]{ /* Close Button */\n        height: 50px;\n    }\n\n    .shuffle-cards-content > button{ /* Shuffle Button & Start Button */\n        border-radius: 10px; \n        padding: 10px 0 10px 0;\n        background-color: #ef4444;\n        color: white;\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        font-size: 15px;\n        letter-spacing: 7px;\n    }\n\n    .display-number-of-shuffles{ /* Display Number of Shuffles */\n        border: 1px solid black;\n        border-radius: 10px; \n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        letter-spacing: 5px;\n        text-align: center; \n    }\n    .shuffle-limit-reached{ /* Shuffle Limit Reached */\n        animation-name: shuffle-limit-reached-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-limit-reached-anim{\n        from{\n            transform: scale(1); \n            border-color: initial;\n        }\n        to{\n            transform: scale(1.1);  \n            border-color: red; \n        }\n    }\n\n    /* |Loading Room Content| */\n    .loading-room-content{\n        border: 1px solid purple; \n        margin-top: 10px; \n        padding: 3px;\n    }\n\n    /* |Battle Arena Content| */\n    .battle-arena-content{ \n        display: flex; \n        flex-direction: column; \n        gap: 10px; \n\n        border: 1px solid lightcoral;\n        margin-top: 10px;\n        padding: 3px; \n    }\n    .singularity-point-station{ /* Singularity Point Station */\n        display: flex;\n\n        border: 1px solid darkorange; \n        padding: 3px; \n    }\n    .singularity-point-station > div{ /* User Singularity Points & Comp Singularity Points */\n        flex: 1; \n\n        border: 1px solid red;\n        text-align: center;\n    }\n    .battle-station{ /* Battle Station */\n        display: flex;\n        justify-content: space-between; \n        gap: 100px;\n\n        border: 1px solid blue;\n        padding: 3px;\n    }\n    .battle-station > div{ /* User & Computer battle card */\n        border: 1px solid black;\n        height: 80px; /* Testing width */\n        width: 80px; /* Testing height */\n    }\n\n    .card-deck-station{ /* Card Deck Station */\n        display: flex;\n        justify-content: space-between;\n        gap: 5px;\n\n        border: 1px solid darkgreen;\n        padding: 3px;\n    }\n    .card-deck-station > div:nth-child(1){ /* User Deck Station */\n        display: flex;\n        gap: 5px;\n\n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(1) > div{ /* User cards in deck station */ \n        text-align: center; \n        border: 1px solid red;\n        font-size: 8px;\n        width: 30px; /* Testing width */\n    }\n\n    .card-deck-station > div:nth-child(2){ /* Comp Deck Station */\n        display: flex;\n        gap: 5px;\n        \n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(2) > div{ /* Comp cards in deck station */\n        text-align: center;\n        border: 1px solid blue;\n        font-size: 8px;\n        width: 30px;  /* Testing width */ \n    }\n\n    .card-stat-station{ /* Card Stat Station */\n        display: flex; \n        justify-content: space-around; \n        gap: 100px; \n\n        border: 1px solid yellowgreen; \n        padding: 2px; \n    }\n    .card-stat-station > div /* User & Comp Card Stats */\n    {\n        border: 1px solid black; \n        font-size: 15px;\n        padding: 3px; \n    }\n\n    .control-station{ /* Control Station */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid darkcyan;\n        padding: 2px; \n    }\n\n    .user-atk-movement{ /* User Attack Movement */\n        animation-name: userAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes userAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth)); \n        }\n    }\n\n    .user-damage-container{ /* User Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        animation-name: userDamageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards; \n    }\n    @keyframes userDamageContainerAnim{\n        from{\n            transform: translate3d(0, -20px,0);\n        }\n        to{\n            transform: translate3d(140px, -100px, 200px);\n        }\n    }\n\n    .comp-atk-movement{ /* Computer Attack Movement */\n        animation-name: compAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        will-change: transform;\n    }\n    @keyframes compAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth));\n        }\n    }\n\n    .comp-damage-container{ /* Computer Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        animation-name: compDamageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes compDamageContainerAnim{\n        from{\n            transform: translate3d(0,-20px,0);\n        }\n        to{\n            transform: translate3d(-140px, -100px, 200px); \n        }\n    }\n\n    .user-def-movement{ /* User Defend Movement */\n        animation-name: userDefendAnim;\n        animation-duration: .2s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes userDefendAnim{\n        from{\n            transform: rotate(0); \n        }\n        to{\n            transform: rotate(10deg);\n        }\n    }\n\n    .comp-def-movement{ /* Comp Defend Movement */\n        animation-name: compDefendAnim;\n        animation-duration: .2s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes compDefendAnim{\n        from{\n            transform: rotate(0);\n        }\n        to{\n            transform: rotate(-10deg);  \n        }\n    }\n    \n    .death{ /* Death for User|Comp Cards. */\n        background-color: red;\n        animation-name: deathAnim;\n        animation-duration: .6s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes deathAnim{\n        0%{\n            transform: rotateX(0);\n        }\n        20%{\n            transform: rotateX(90deg);\n        }\n        40%{\n            transform: rotateX(0);\n        }\n        60%{\n            transform: rotateX(90deg);\n        }\n        80%{\n            transform: rotateX(0); \n        }\n        100%{\n            transform: rotateX(90deg); \n        }\n    }\n\n    .critical-hit-damage{ /* Critical Hit Damage Animation */\n        animation-name: criticalHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes criticalHitDmgAnim{\n        0%{\n            transform: rotateY(60deg);\n        }\n        30%{\n            transform: rotateY(0);\n        }\n        50%{\n            transform: rotateY(-60deg);\n        }\n        70%{\n            transform: rotateY(0);\n        }\n        100%{\n            transform: rotateY(60deg); \n        }\n    }\n\n    .regular-hit-damage{ /* Regular Hit Damage Animation */\n        animation-name: regularHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes regularHitDmgAnim{\n        0%{\n            transform: rotateY(30deg); \n        }\n        50%{\n            transform: rotateY(0); \n        }\n        70%{\n            transform: rotateY(-30deg); \n        }\n        100%{\n            transform: rotateY(0); \n        }\n    }\n\n    .regular-hit-damage-def{\n\n    }\n\n    /* |Battle Over Window| */\n    .battle-over-window{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 5px; \n\n        /* position: absolute; */\n        width: 100%; \n        height: 300px;\n        background: linear-gradient(to right,#403A3E,#BE5869); \n        color: #cbd5e1; \n        padding: 5px;\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        border-radius: 10px;\n\n        animation-name: battleOverWindowAnim;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        will-change: transform;\n    }\n    @keyframes battleOverWindowAnim{\n        from{\n            transform: perspective(800px) translate3d(0,0,-1000px);\n        }\n        to{\n            transform: perspective(800px) translate3d(0, 0, 0);\n        }\n    }\n    .battle-over-window > div:nth-child(1){ /* Game Over Prompt  */\n        border: 1px solid #cbd5e1;\n        font-size: 35px;\n        letter-spacing: 3px;\n    }\n    .battle-over-window > div:nth-child(2){ /* Winner Prompt */\n        border: 1px solid #cbd5e1; \n        font-size: 25px; \n        letter-spacing: 3px;\n    }\n    .game-stats{ /* Game Stats */\n        display: flex; \n        gap: 10px;\n\n        border: 1px solid #cbd5e1;\n        padding: 3px; \n        font-size: 20px;\n    }\n    .game-stats > div:nth-child(1){ /* User Game Stats */\n        border: 1px solid orange;\n    }\n    .game-stats > div:nth-child(1) > div:nth-child(1){ /* User Game Stats|User Title */\n        border: 1px solid red;\n        text-align: center;\n    }\n    .game-stats > div:nth-child(2){ /* Comp Game Stats */\n        border: 1px solid orange;\n    }\n    .game-stats > div:nth-child(2) > div:nth-child(1){ /* Comp Game Stats|Comp Title */\n        border: 1px solid red; \n        text-align: center;\n    }\n\n}`,"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"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",sourcesContent:[':root{\n    --battleStationHalfWidth:0px; \n    --inGameMenuWindowY: 0px; \n}\n/* body - The main body for the browser. */\nbody{\n    padding: 0;\n    margin: 0; \n}\n\n/* |Fonts| */\n/* Font-0 - New Amsterdam */\n@font-face {\n    font-family: new-amsterdam;\n    src: url(\'../fonts/new-amsterdam/NewAmsterdam-Regular.ttf\');\n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box;\n}\n\n.no-clicks{\n    pointer-events: none; \n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* |Mobile Viewports| */\n@media screen and (max-width: 600px){\n    /* |Main Content| */\n    #content{\n        border: 1px solid red; \n        background-color: #ef4444;\n        padding: 5px; \n        height: 100vh;\n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n\n        border: 1px solid blue;\n        background-color: #ef4444; \n    }\n    .main-menu-content > h1{ /* Game Logo */\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        letter-spacing: 5px;\n        color: #fbbf24;\n    }\n    .main-menu-content > button{ /* Quick Game|Settings|SoSu Studio */\n        border-radius: 10px; \n        width: 50%; \n        padding: 5px 10px 5px 10px;\n        background-color: #fbbf24;\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        font-size: 15px;\n    }\n\n    /* |In Game Menu Content| */\n    .in-game-menu-content{\n        /* border: 1px solid green; */\n        padding: 3px;\n    }\n    .in-game-menu-content > div{ /* In Game Menu Container */\n        display: flex;\n        justify-content: end;\n        align-items: center;   \n\n        border: 1px solid #fbbf24;\n        border-radius: 10px; \n        background-color: #fbbf24;\n        padding: 3px; \n    }\n    .in-game-menu-content > div > img[src]{ /* In Game Menu Button Image */\n        width: 40px; \n        transition-property: transform;\n        transition-duration: .5s;\n        /* transition-timing-function: ease-in-out; */\n        /* border: 1px solid black; */\n    }\n    .rotate-in-game-menu{ /* Rotates the In Game Menu Button Image */\n        transform: rotate(90deg); \n    }\n    .in-game-menu-window{ /* In Game Menu Window */\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        position: relative;\n        border: 1px solid #fbbe24b6;\n        border-radius: 10px;\n        background-color: #fbbe24b6;\n        height: 100%;\n        padding: 20px; \n    }\n    .in-game-menu-window > div{ /* In Game Menu Window|Close Window Container */\n        display: flex;\n        justify-content: end;\n        align-items: center; \n        \n        border: 1px solid #ef4444;\n        border-radius: 10px;  \n        background-color: #ef4444; \n        padding: 3px;\n    }\n    .in-game-menu-window > div > img[src]{ /* In Game Menu Window|Close Window Container|Close Window Button Image */\n        width: 40px; \n    }\n    .in-game-menu-selection-container{ /* In Game Menu Window| Menu Selection Container */\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n\n        border: 1px solid black;\n        padding: 5px;\n    }\n    .in-game-menu-selection-container > button { /* Each button for the game menu. */\n        width: 50%;  \n        padding: 5px 10px 5px 10px; \n        border-radius: 10px; \n        background-color: #fbbf24; \n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        font-size: 15px;\n    }\n    .open-in-game-menu-window{ /* Will open the In Game Menu Window. */\n        animation-name: openInGameMenuWindowAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease;\n        animation-fill-mode: forwards; \n    }\n    @keyframes openInGameMenuWindowAnim{\n        from{\n            transform: translate3d(-200px, 600px, 300px); \n        }\n        to{\n            transform: translate3d(0, var(--inGameMenuWindowY), 0);\n        }\n    }\n    .close-in-game-menu-window{ /* Will close the In Game Menu Window. */\n        animation-name: closeInGameMenuWindowAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeInGameMenuWindowAnim{\n        from{\n            transform: translate3d(0, -270px, 0);\n        }\n        to{\n            transform: translate3d(-200px, 600px, 300px); \n        }\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid  orange; \n        border-radius: 10px; \n        background-color: #fbbf24;\n        margin-top: 10px;\n        padding: 3px;\n    }\n\n    .display-shuffled-cards{ /* Display Shuffled Cards */\n        display: flex; \n        gap: 3px;\n\n        padding: 10px;\n        /* border: 1px solid green;  */\n    }\n    .display-shuffled-cards > div{ /* Cards in the \'display shuffled cards\' */ \n        flex: 1;\n\n        text-align: center; \n        font-size: 11px; \n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        border: 1px solid purple;\n        border-radius: 10px;\n        height: 80px;\n    }\n    .shuffle-card-animation{ /* shuffle card animation for \'display shuffled cards\' */\n        animation-name: shuffle-card-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-card-anim{\n        from{\n            transform: scale(1);\n        }\n        to{\n            transform: scale(1.2); \n        }\n    }\n\n    .view-card{ /* View cards in \'display shuffled cards\'*/\n        position: absolute;\n        top: 0;\n        right: 0; \n        width: 100%;\n        height: 400px; \n        padding: 5px;\n        border: 1px solid black; \n        background-color: rgba(0, 0, 0, 0.658);\n    }\n    .open-view-card{\n        animation-name: open-view-card-anim;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes open-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n        to{\n            transform: perspective(800px) translate3d(0,0,0);\n        }\n    }\n    .close-view-card{\n        animation-name: close-view-card-anim; \n        animation-duration: .5s; \n        animation-timing-function: ease-in;\n        will-change: transform; \n    }\n    @keyframes close-view-card-anim{\n        from{\n            transform: perspective(800px) translate3d(0, 0, 0); \n        }\n        to{\n            transform: perspective(800px) translate3d(0, 0, -1500px); \n        }\n    }\n    .view-card > div{ \n        display: flex;\n        justify-content: end;\n\n        border: 1px solid orange; \n    }\n    .view-card > div > img[src]{ /* Close Button */\n        height: 50px;\n    }\n\n    .shuffle-cards-content > button{ /* Shuffle Button & Start Button */\n        border-radius: 10px; \n        padding: 10px 0 10px 0;\n        background-color: #ef4444;\n        color: white;\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        font-size: 15px;\n        letter-spacing: 7px;\n    }\n\n    .display-number-of-shuffles{ /* Display Number of Shuffles */\n        border: 1px solid black;\n        border-radius: 10px; \n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        letter-spacing: 5px;\n        text-align: center; \n    }\n    .shuffle-limit-reached{ /* Shuffle Limit Reached */\n        animation-name: shuffle-limit-reached-anim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffle-limit-reached-anim{\n        from{\n            transform: scale(1); \n            border-color: initial;\n        }\n        to{\n            transform: scale(1.1);  \n            border-color: red; \n        }\n    }\n\n    /* |Loading Room Content| */\n    .loading-room-content{\n        border: 1px solid purple; \n        margin-top: 10px; \n        padding: 3px;\n    }\n\n    /* |Battle Arena Content| */\n    .battle-arena-content{ \n        display: flex; \n        flex-direction: column; \n        gap: 10px; \n\n        border: 1px solid lightcoral;\n        margin-top: 10px;\n        padding: 3px; \n    }\n    .singularity-point-station{ /* Singularity Point Station */\n        display: flex;\n\n        border: 1px solid darkorange; \n        padding: 3px; \n    }\n    .singularity-point-station > div{ /* User Singularity Points & Comp Singularity Points */\n        flex: 1; \n\n        border: 1px solid red;\n        text-align: center;\n    }\n    .battle-station{ /* Battle Station */\n        display: flex;\n        justify-content: space-between; \n        gap: 100px;\n\n        border: 1px solid blue;\n        padding: 3px;\n    }\n    .battle-station > div{ /* User & Computer battle card */\n        border: 1px solid black;\n        height: 80px; /* Testing width */\n        width: 80px; /* Testing height */\n    }\n\n    .card-deck-station{ /* Card Deck Station */\n        display: flex;\n        justify-content: space-between;\n        gap: 5px;\n\n        border: 1px solid darkgreen;\n        padding: 3px;\n    }\n    .card-deck-station > div:nth-child(1){ /* User Deck Station */\n        display: flex;\n        gap: 5px;\n\n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(1) > div{ /* User cards in deck station */ \n        text-align: center; \n        border: 1px solid red;\n        font-size: 8px;\n        width: 30px; /* Testing width */\n    }\n\n    .card-deck-station > div:nth-child(2){ /* Comp Deck Station */\n        display: flex;\n        gap: 5px;\n        \n        border: 1px solid black;\n        padding: 2px;\n    }\n    .card-deck-station > div:nth-child(2) > div{ /* Comp cards in deck station */\n        text-align: center;\n        border: 1px solid blue;\n        font-size: 8px;\n        width: 30px;  /* Testing width */ \n    }\n\n    .card-stat-station{ /* Card Stat Station */\n        display: flex; \n        justify-content: space-around; \n        gap: 100px; \n\n        border: 1px solid yellowgreen; \n        padding: 2px; \n    }\n    .card-stat-station > div /* User & Comp Card Stats */\n    {\n        border: 1px solid black; \n        font-size: 15px;\n        padding: 3px; \n    }\n\n    .control-station{ /* Control Station */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid darkcyan;\n        padding: 2px; \n    }\n\n    .user-atk-movement{ /* User Attack Movement */\n        animation-name: userAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-out;\n        will-change: transform; \n    }\n    @keyframes userAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth)); \n        }\n    }\n\n    .user-damage-container{ /* User Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        animation-name: userDamageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards; \n    }\n    @keyframes userDamageContainerAnim{\n        from{\n            transform: translate3d(0, -20px,0);\n        }\n        to{\n            transform: translate3d(140px, -100px, 200px);\n        }\n    }\n\n    .comp-atk-movement{ /* Computer Attack Movement */\n        animation-name: compAtkMovement;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        will-change: transform;\n    }\n    @keyframes compAtkMovement{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(var(--battleStationHalfWidth));\n        }\n    }\n\n    .comp-damage-container{ /* Computer Damage Container Message */\n        position: absolute;\n        border: 1px solid black;\n\n        animation-name: compDamageContainerAnim;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes compDamageContainerAnim{\n        from{\n            transform: translate3d(0,-20px,0);\n        }\n        to{\n            transform: translate3d(-140px, -100px, 200px); \n        }\n    }\n\n    .user-def-movement{ /* User Defend Movement */\n        animation-name: userDefendAnim;\n        animation-duration: .2s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes userDefendAnim{\n        from{\n            transform: rotate(0); \n        }\n        to{\n            transform: rotate(10deg);\n        }\n    }\n\n    .comp-def-movement{ /* Comp Defend Movement */\n        animation-name: compDefendAnim;\n        animation-duration: .2s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes compDefendAnim{\n        from{\n            transform: rotate(0);\n        }\n        to{\n            transform: rotate(-10deg);  \n        }\n    }\n    \n    .death{ /* Death for User|Comp Cards. */\n        background-color: red;\n        animation-name: deathAnim;\n        animation-duration: .6s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes deathAnim{\n        0%{\n            transform: rotateX(0);\n        }\n        20%{\n            transform: rotateX(90deg);\n        }\n        40%{\n            transform: rotateX(0);\n        }\n        60%{\n            transform: rotateX(90deg);\n        }\n        80%{\n            transform: rotateX(0); \n        }\n        100%{\n            transform: rotateX(90deg); \n        }\n    }\n\n    .critical-hit-damage{ /* Critical Hit Damage Animation */\n        animation-name: criticalHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes criticalHitDmgAnim{\n        0%{\n            transform: rotateY(60deg);\n        }\n        30%{\n            transform: rotateY(0);\n        }\n        50%{\n            transform: rotateY(-60deg);\n        }\n        70%{\n            transform: rotateY(0);\n        }\n        100%{\n            transform: rotateY(60deg); \n        }\n    }\n\n    .regular-hit-damage{ /* Regular Hit Damage Animation */\n        animation-name: regularHitDmgAnim;\n        animation-duration: .3s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes regularHitDmgAnim{\n        0%{\n            transform: rotateY(30deg); \n        }\n        50%{\n            transform: rotateY(0); \n        }\n        70%{\n            transform: rotateY(-30deg); \n        }\n        100%{\n            transform: rotateY(0); \n        }\n    }\n\n    .regular-hit-damage-def{\n\n    }\n\n    /* |Battle Over Window| */\n    .battle-over-window{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 5px; \n\n        /* position: absolute; */\n        width: 100%; \n        height: 300px;\n        background: linear-gradient(to right,#403A3E,#BE5869); \n        color: #cbd5e1; \n        padding: 5px;\n        font-family: new-amsterdam, system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n        border-radius: 10px;\n\n        animation-name: battleOverWindowAnim;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        will-change: transform;\n    }\n    @keyframes battleOverWindowAnim{\n        from{\n            transform: perspective(800px) translate3d(0,0,-1000px);\n        }\n        to{\n            transform: perspective(800px) translate3d(0, 0, 0);\n        }\n    }\n    .battle-over-window > div:nth-child(1){ /* Game Over Prompt  */\n        border: 1px solid #cbd5e1;\n        font-size: 35px;\n        letter-spacing: 3px;\n    }\n    .battle-over-window > div:nth-child(2){ /* Winner Prompt */\n        border: 1px solid #cbd5e1; \n        font-size: 25px; \n        letter-spacing: 3px;\n    }\n    .game-stats{ /* Game Stats */\n        display: flex; \n        gap: 10px;\n\n        border: 1px solid #cbd5e1;\n        padding: 3px; \n        font-size: 20px;\n    }\n    .game-stats > div:nth-child(1){ /* User Game Stats */\n        border: 1px solid orange;\n    }\n    .game-stats > div:nth-child(1) > div:nth-child(1){ /* User Game Stats|User Title */\n        border: 1px solid red;\n        text-align: center;\n    }\n    .game-stats > div:nth-child(2){ /* Comp Game Stats */\n        border: 1px solid orange;\n    }\n    .game-stats > div:nth-child(2) > div:nth-child(1){ /* Comp Game Stats|Comp Title */\n        border: 1px solid red; \n        text-align: center;\n    }\n\n}'],sourceRoot:""}]);const m=c},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(r[d]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);a&&r[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var i={},r=[],s=0;s<n.length;s++){var d=n[s],l=a.base?d[0]+a.base:d[0],c=i[l]||0,A="".concat(l," ").concat(c);i[l]=c+1;var m=t(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var C=o(u,a);a.byIndex=s,e.splice(s,0,{identifier:A,updater:C,references:1})}r.push(A)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=a(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var s=t(i[r]);e[s].references--}for(var d=a(n,o),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=d}}},659:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},188:(n,e,t)=>{n.exports=t.p+"d38b24525add933eec6a.ttf"}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var i=e[a]={id:a,exports:{}};return n[a](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;let a=[{name:"Tobo The Fighter",cate:"supra",atk:44,def:12,esse:100,tempName:"Tobo",defending:!1,beenHit:!1},{name:"The One From System",cate:"supra",atk:46,def:10,esse:100,tempName:"Jace",defending:!1,beenHit:!1},{name:"Spunky With The Funky Draco",cate:"supra",atk:39,def:11,esse:100,tempName:"Spunky",defending:!1,beenHit:!1},{name:"The Trendsetter Rotao",cate:"fere",atk:25,def:18,esse:100,tempName:"Rotao",defending:!1,beenHit:!1},{name:"Allybelle",cate:"fere",atk:27,def:15,esse:100,tempName:"Ally",defending:!1,beenHit:!1},{name:"The Experiment",cate:"fere",atk:24,def:13,esse:100,tempName:"Mason",defending:!1,beenHit:!1},{name:"Dan The Prol",cate:"bonum",atk:19,def:22,esse:100,tempName:"Dan",defending:!1,beenHit:!1},{name:"Mac The Rat",cate:"bonum",atk:13,def:28,esse:100,tempName:"Mac",defending:!1,beenHit:!1},{name:"A Karen",cate:"bonum",atk:15,def:26,esse:100,tempName:"Karen",defending:!1,beenHit:!1},{name:"The office Worker Ken",cate:"bonum",atk:16,def:25,esse:100,tempName:"Ken",defending:!1,beenHit:!1}];function o(){let n=[],e=[],t=[],o=[],i=[];return a.forEach((n=>{"supra"===n.cate?e.push(n):"fere"===n.cate?t.push(n):"bonum"===n.cate&&o.push(n)})),n.push(e[function(n){return Math.floor(Math.random()*n.length)}(e)]),n.push(t[function(n){return Math.floor(Math.random()*n.length)}(t)]),i=function(n){let e=!1,t=[],a=Math.floor(Math.random()*n.length);for(t.push(a);!e;)a=Math.floor(Math.random()*n.length),t.includes(a)||(t.push(a),e=!0);return t}(o),i.forEach((e=>{n.push(o[e])})),n}let i=[],r={numOfDuplicates:0,stopDuplicateTest:!1,newCompDeck:[],mainBattleCard:null,singularityPoints:0,cardSwitches:0,cardsToSwitch:[],compChoiceOne:["Attack","Defend","Switch"],compChoiceTwo:["Attack","Defend"],isDefending:!1,supraMisses:[],fereMisses:[],bonumMisses:[],overallAttacks:0,overallDefends:0,overallMisses:0,overallSwitches:0};function s(){return r.stopDuplicateTest||(r.newCompDeck=JSON.parse(JSON.stringify(o()))),console.log("Comp Deck: ",r.newCompDeck),console.log("User Deck: ",i),r.newCompDeck.forEach((n=>{for(let e=0;e<i.length;e++)n.name===i[e].name&&(console.log("Comp Deck Duplicate: ",n.name),r.numOfDuplicates++)})),console.log("\n"),r.numOfDuplicates>=2?(r.numOfDuplicates=0,s()):r.stopDuplicateTest=!0,r.newCompDeck}let d=[],l={numOfShuffles:0,endShuffles:!1,commenceShuffleAnim:!1,mainBattleCard:null,switchCard:null,singularityPoints:0,priorMove:null,isDefending:!1,overallAttacks:0,overallDefends:0,overallMisses:0,overallSwitches:0};function c(n,e,t){"user"===t?r.isDefending?function(n,e){0===n?l.singularityPoints+=0:n===Number((1/3).toFixed(1))?l.singularityPoints+=10-Math.trunc(e/100*10):.5===n?l.singularityPoints+=20-Math.trunc(e/100*20):n===Number((2/3).toFixed(1))?l.singularityPoints+=30-Math.trunc(e/100*30):n===3/4?l.singularityPoints+=50-Math.trunc(e/100*50):1===n&&(l.singularityPoints+=80-Math.trunc(e/100*80))}(n,e):function(n){0===n?l.singularityPoints+=0:n===Number((1/3).toFixed(1))?l.singularityPoints+=10:.5===n?l.singularityPoints+=20:n===Number((2/3).toFixed(1))?l.singularityPoints+=30:n===3/4?l.singularityPoints+=50:1===n&&(l.singularityPoints+=80)}(n):l.isDefending?function(n,e){0===n?r.singularityPoints+=0:n===Number((1/3).toFixed(1))?r.singularityPoints+=10-Math.trunc(e/100*10):.5===n?r.singularityPoints+=20-Math.trunc(e/100*20):n===Number((2/3).toFixed(1))?r.singularityPoints+=30-Math.trunc(e/100*30):n===3/4?r.singularityPoints+=50-Math.trunc(e/100*50):1===n&&(r.singularityPoints+=80-Math.trunc(e/100*80))}(n,e):function(n){0===n?r.singularityPoints+=0:n===Number((1/3).toFixed(1))?r.singularityPoints+=10:.5===n?r.singularityPoints+=20:n===Number((2/3).toFixed(1))?r.singularityPoints+=30:n===3/4?r.singularityPoints+=50:1===n&&(r.singularityPoints+=80)}(n)}function A(n,e){return"user"===n?function(n){if("Attack"===n){const n=2/3,e=[Number((1/3).toFixed(1)),.5,0,Number(n.toFixed(1)),3/4,1,0],t=m(e.length);if(c(e[t],r.mainBattleCard.def,"user"),r.isDefending){console.log("User Attack Point: ",e[t]);const n=Math.trunc(l.mainBattleCard.atk*e[t]*(r.mainBattleCard.def/100));r.mainBattleCard.esse=r.mainBattleCard.esse-(l.mainBattleCard.atk*e[t]-n),r.mainBattleCard.esse=Math.trunc(r.mainBattleCard.esse)}else r.mainBattleCard.esse=r.mainBattleCard.esse-l.mainBattleCard.atk*e[t],r.mainBattleCard.esse=Math.trunc(r.mainBattleCard.esse);if(r.mainBattleCard.esse<=0&&(r.mainBattleCard.esse=0),r.isDefending){const n=Math.trunc(l.mainBattleCard.atk*e[t]*(r.mainBattleCard.def/100));return 0===e[t]?"Miss!":1===e[t]?`${Math.trunc(l.mainBattleCard.atk-n)} Damage!`:`${Math.trunc(l.mainBattleCard.atk*e[t]-n)} Damage!`}return 0===e[t]?"Miss!":1===e[t]?`${l.mainBattleCard.atk} Critial Hit!`:`${Math.trunc(l.mainBattleCard.atk*e[t])} Damage!`}}(e):function(n){if("Attack"===n){const n=2/3,e=[Number((1/3).toFixed(1)),.5,0,Number(n.toFixed(1)),3/4,1,0],t=m(e.length);if(c(e[t],l.mainBattleCard.def,"comp"),l.isDefending){console.log("Comp Attack Point: ",e[t]);const n=Math.trunc(r.mainBattleCard.atk*e[t]*(l.mainBattleCard.def/100));l.mainBattleCard.esse=l.mainBattleCard.esse-(r.mainBattleCard.atk*e[t]-n),l.mainBattleCard.esse=Math.trunc(l.mainBattleCard.esse)}else l.mainBattleCard.esse=l.mainBattleCard.esse-r.mainBattleCard.atk*e[t],l.mainBattleCard.esse=Math.trunc(l.mainBattleCard.esse);if(l.mainBattleCard.esse<=0&&(l.mainBattleCard.esse=0),l.isDefending){const n=Math.trunc(r.mainBattleCard.atk*e[t]*(l.mainBattleCard.def/100));return 0===e[t]?"Miss!":1===e[t]?`${Math.trunc(r.mainBattleCard.atk-n)} Damage!`:`${Math.trunc(r.mainBattleCard.atk*e[t]-n)} Damage!`}return 0===e[t]?"Miss!":1===e[t]?`${r.mainBattleCard.atk} Critical Hit!`:`${Math.trunc(r.mainBattleCard.atk*e[t])} Damage!`}}(e)}function m(n){return Math.floor(Math.random()*n)}function u(n){const e=document.querySelector(".battle-arena-content"),t=document.querySelector(".singularity-point-station"),a=document.querySelector(".battle-station"),o=document.querySelector(".card-stat-station"),i=document.querySelector(".card-deck-station"),s=document.querySelector(".control-station");null===n?(p(),f(n),B(),h(),x()):1===n?(e.removeChild(t),e.removeChild(a),e.removeChild(o),e.removeChild(i),e.removeChild(s),p(),f(n),B(),h(),x(),C(1)):2===n?(e.removeChild(o),e.removeChild(i),e.removeChild(s),B(),h(),x(),C(2),setTimeout((()=>{u(3)}),1e3)):3===n?(e.removeChild(t),e.removeChild(a),e.removeChild(o),e.removeChild(i),e.removeChild(s),p(),f(1),B(),h(),x(),C(2),function(){if(0===r.mainBattleCard.esse)document.querySelector(".battle-station > div:nth-child(2)").classList.add("death"),d.forEach(((n,e)=>{0===n.esse&&d.splice(e,1)})),0===d.length?setTimeout((()=>{u(6)}),2e3):setTimeout((()=>{u(4)}),2e3);else if(0===l.mainBattleCard.esse){const n=document.querySelector(".battle-station > div:nth-child(1)");console.log("The user card is dead: ",n)}}()):4===n?(e.removeChild(t),e.removeChild(a),e.removeChild(o),e.removeChild(i),e.removeChild(s),p(),f(2),B(),h(),x(),C(2)):6===n?(e.removeChild(t),e.removeChild(a),e.removeChild(o),e.removeChild(i),e.removeChild(s),p(),f(3),B(),h(),x(),C(3)):7===n?(e.removeChild(t),e.removeChild(a),e.removeChild(o),e.removeChild(i),e.removeChild(s),p(),f(1),B(),h(),x(),C(2),setTimeout((()=>{v()}),800)):8===n&&(e.removeChild(t),e.removeChild(a),e.removeChild(o),e.removeChild(i),e.removeChild(s),p(),f(4),B(),h(),x(),C(2))}function C(n){const e=document.querySelectorAll(".control-station > button"),t=document.querySelectorAll(".card-deck-station > div:nth-child(1) > div");1===n?(e.forEach((n=>{n.disabled=!0})),t.forEach((n=>{n.classList.add("no-clicks")})),setTimeout((()=>{e.forEach((n=>{n.disabled=!1})),t.forEach((n=>{n.classList.remove("no-clicks")}))}),500)):2===n?(e.forEach((n=>{n.disabled=!0})),t.forEach((n=>{n.classList.add("no-clicks")})),setTimeout((()=>{e.forEach((n=>{n.disabled=!1})),t.forEach((n=>{n.classList.remove("no-clicks")}))}),2e3)):3===n&&(e.forEach((n=>{n.disabled=!0})),t.forEach((n=>{n.classList.add("no-clicks")})))}function p(){const n=document.querySelector(".battle-arena-content"),e=document.createElement("div");e.classList.add("singularity-point-station");const t=document.createElement("div");t.textContent=`${l.singularityPoints} sp`;const a=document.createElement("div");a.textContent=`${r.singularityPoints} sp`,e.appendChild(t),e.appendChild(a),n.appendChild(e)}function f(n){const e=document.querySelector(".battle-arena-content"),t=document.createElement("div");t.classList.add("battle-station");const a=document.createElement("div");null===n?(l.mainBattleCard=i[0],a.textContent=l.mainBattleCard.name):0===n?a.textContent=l.mainBattleCard.name:1===n?(l.isDefending&&a.classList.add("user-def-movement"),a.textContent=l.mainBattleCard.name):2===n||3===n?a.textContent=l.mainBattleCard.name:4===n&&(l.isDefending&&a.classList.add("user-def-movement"),a.textContent=l.mainBattleCard.name);const o=document.createElement("div");null===n?(r.mainBattleCard=d[0],o.textContent=r.mainBattleCard.name):0===n?o.textContent=r.mainBattleCard.name:1===n?(r.isDefending&&o.classList.add("comp-def-movement"),o.textContent=r.mainBattleCard.name):2===n?(r.mainBattleCard=d[0],o.textContent=r.mainBattleCard.name):3===n?(r.mainBattleCard=null,o.textContent="No Card",0===d.length&&setTimeout((()=>{var n,e;n="Quick Game",e=1,document.querySelector(".battle-arena-content").replaceChildren(),"Quick Game"===n&&function(n){const e=document.querySelector(".battle-arena-content"),t=document.createElement("div");t.classList.add("battle-over-window"),e.appendChild(t),function(){const n=document.createElement("div"),e=document.querySelector(".battle-over-window");n.textContent="Game Over",e.appendChild(n)}(),function(n){const e=document.createElement("div"),t=document.querySelector(".battle-over-window");1===n?e.textContent="You Win!":2===n&&(e.textContent="Computer Wins!"),t.appendChild(e)}(n),function(){const n=document.querySelector(".battle-over-window"),e=document.createElement("div");e.classList.add("game-stats"),n.appendChild(e),function(){const n=document.querySelector(".game-stats"),e=document.createElement("div"),t=document.createElement("div");t.textContent="User";const a=document.createElement("div");a.textContent=`Overall Attacks: ${l.overallAttacks}`;const o=document.createElement("div");o.textContent=`Overall Defends: ${l.overallDefends}`;const i=document.createElement("div");i.textContent=`Overall Misses: ${l.overallMisses}`;const r=document.createElement("div");r.textContent=`Overall Switches: ${l.overallSwitches}`;const s=document.createElement("div");s.textContent=`SP: ${l.singularityPoints}`,e.appendChild(t),e.appendChild(a),e.appendChild(o),e.appendChild(i),e.appendChild(r),e.appendChild(s),n.appendChild(e)}(),function(){const n=document.querySelector(".game-stats"),e=document.createElement("div"),t=document.createElement("div");t.textContent="Comp";const a=document.createElement("div");a.textContent=`Overall Attacks: ${r.overallAttacks}`;const o=document.createElement("div");o.textContent=`Overall Defends: ${r.overallDefends}`;const i=document.createElement("div");i.textContent=`Overall Misses: ${r.overallMisses}`;const s=document.createElement("div");s.textContent=`Overall Switches: ${r.overallSwitches}`;const d=document.createElement("div");d.textContent=`SP: ${r.singularityPoints}`,e.appendChild(t),e.appendChild(a),e.appendChild(o),e.appendChild(i),e.appendChild(s),e.appendChild(d),n.appendChild(e)}()}()}(e)}),2e3)):4===n&&(r.isDefending&&o.classList.add("comp-def-movement"),o.textContent=r.mainBattleCard.name),t.appendChild(a),t.appendChild(o),e.appendChild(t)}function B(){const n=document.querySelector(".battle-arena-content"),e=document.createElement("div");e.classList.add("card-stat-station");const t=document.createElement("div");i.forEach((n=>{if(n.tempName===l.mainBattleCard.tempName){const e=document.createElement("div");e.textContent=`Name: ${n.tempName}`,t.appendChild(e);const a=document.createElement("div");a.textContent=`Cate: ${n.cate}`,t.appendChild(a);const o=document.createElement("div");o.textContent=`Atk: ${n.atk}`,t.appendChild(o);const i=document.createElement("div");i.textContent=`Def: ${n.def}`,t.appendChild(i);const r=document.createElement("div");r.textContent=`Esse: ${n.esse}`,t.appendChild(r)}}));const a=document.createElement("div");null===r.mainBattleCard?a.textContent="No Stats":d.forEach((n=>{if(n.tempName===r.mainBattleCard.tempName){const e=document.createElement("div");e.textContent=`Name: ${n.tempName}`,a.appendChild(e);const t=document.createElement("div");t.textContent=`Cate: ${n.cate}`,a.appendChild(t);const o=document.createElement("div");o.textContent=`Atk: ${n.atk}`,a.appendChild(o);const i=document.createElement("div");i.textContent=`Def: ${n.def}`,a.appendChild(i);const r=document.createElement("div");r.textContent=`Esse: ${n.esse}`,a.appendChild(r)}})),e.appendChild(t),e.appendChild(a),n.appendChild(e)}function h(){const n=document.querySelector(".battle-arena-content"),e=document.createElement("div");e.classList.add("card-deck-station");const t=document.createElement("div");for(let n=0;n<i.length;n++)if(l.mainBattleCard.name!==i[n].name){const e=document.createElement("div");e.textContent=i[n].tempName,t.appendChild(e),e.addEventListener("click",g)}const a=document.createElement("div");for(let n=0;n<d.length;n++)if(r.mainBattleCard.name!==d[n].name){const e=document.createElement("div");e.textContent=d[n].tempName,a.appendChild(e)}1!==d.length&&0!==d.length||(a.textContent="Empty Deck"),e.appendChild(t),e.appendChild(a),n.appendChild(e)}function g(n){l.overallSwitches+=1,l.switchCard=n.target.textContent,i.forEach((n=>{n.tempName===l.switchCard&&(l.mainBattleCard=n)})),u(1)}function x(){const n=document.querySelector(".battle-arena-content"),e=document.createElement("div");e.classList.add("control-station");const t=document.createElement("button");t.textContent="Attack",t.addEventListener("click",b);const a=document.createElement("button");a.textContent="Defend",a.addEventListener("click",y),e.appendChild(t),e.appendChild(a),n.appendChild(e)}function b(n){if("Attack"===n.target.textContent){const e=document.querySelector(".battle-station");document.documentElement.style.setProperty("--battleStationHalfWidth",e.clientWidth/4+"px"),document.querySelector(".battle-station > div:nth-child(1)").classList.add("user-atk-movement");const t=document.querySelector(".battle-station > div:nth-child(2)");document.querySelector(".control-station > button:nth-child(1)").disabled=!0,document.querySelector(".control-station > button:nth-child(2)").disabled=!0,document.querySelectorAll(".card-deck-station > div:nth-child(1) > div").forEach((n=>{n.classList.add("no-clicks")}));const a=A("user",n.target.textContent);console.log(a),l.priorAttack=a,"Miss!"!==a?l.overallAttacks+=1:"Miss!"===a&&(l.overallMisses+=1),r.isDefending&&(r.isDefending=!1),setTimeout((()=>{const n=document.createElement("div");n.classList.add("comp-damage-container"),n.textContent=a,t.appendChild(n),Q(a,t,r,l),u(2)}),500)}0!==r.mainBattleCard.esse&&setTimeout((()=>{v()}),3e3)}function v(){const n=document.querySelector(".battle-station"),e=document.querySelector(".battle-station > div:nth-child(2)"),t=document.querySelector(".battle-station > div:nth-child(1)"),a=function(n){if(r.cardsToSwitch.length=0,d.forEach((n=>{n.name!==r.mainBattleCard.name&&r.cardsToSwitch.push(n)})),"Miss!"===n||"Computer Switched"===n)return"Attack";if("supra"===r.mainBattleCard.cate)if(r.mainBattleCard.esse>50&&d.length>1){if(r.supraMisses.length>=3){const n=Math.floor(Math.random()*r.compChoiceOne.length);return r.compChoiceOne[n]}}else{if(r.mainBattleCard.esse<50&&d.length>1){const n=Math.floor(Math.random()*r.compChoiceOne.length);return r.compChoiceOne[n]}if(r.mainBattleCard.esse<50&&1===d.length){const n=Math.floor(Math.random()*r.compChoiceTwo.length);return r.compChoiceTwo[n]}}else if("fere"===r.mainBattleCard.cate)if(r.mainBattleCard.esse>50&&d.length>1){if(r.fereMisses.length>=3){const n=Math.floor(Math.random()*r.compChoiceOne.length);return r.compChoiceOne[n]}}else{if(r.mainBattleCard.esse<50&&d.length>1){const n=Math.floor(Math.random()*r.compChoiceOne.length);return r.compChoiceOne[n]}if(r.mainBattleCard.esse<50&&1===d.length){const n=Math.floor(Math.random()*r.compChoiceTwo.length);return r.compChoiceTwo[n]}}else if("bonum"===r.mainBattleCard.cate)if(r.mainBattleCard.esse>50&&d.length>1){if(r.bonumMisses>=3){const n=Math.floor(Math.random()*r.compChoiceOne.length);return r.compChoiceOne[n]}}else{if(r.mainBattleCard.esse<50&&d.length>1){const n=Math.floor(Math.random()*r.compChoiceOne.length);return r.compChoiceOne[n]}if(r.mainBattleCard.esse<50&&1===d.length){const n=Math.floor(Math.random()*r.compChoiceTwo.length);return r.compChoiceTwo[n]}}}(l.priorMove);if("Attack"===a){document.documentElement.style.setProperty("--battleStationHalfWidth",-n.clientWidth/4+"px"),e.classList.add("comp-atk-movement");const o=A("computer",a);console.log("Computer Attack: ",o),console.log("\n"),"Miss!"===o?(r.overallMisses+=1,"supra"===r.mainBattleCard.cate?r.supraMisses.push(o):"fere"===r.mainBattleCard.cate?r.fereMisses.push(o):"bonum"===r.mainBattleCard.cate&&r.bonumMisses.push(o)):r.overallAttacks+=1,setTimeout((()=>{const n=document.createElement("div");n.classList.add("user-damage-container"),n.textContent=o,t.appendChild(n),Q(o,t,l,r),l.isDefending=!1,u(2)}),500)}else if("Switch"===a){r.overallSwitches+=1;const n=Math.floor(Math.random()*r.cardsToSwitch.length);r.mainBattleCard=r.cardsToSwitch[n],console.log("Computer Switches Cards"),console.log("Cards To Switch: ",r.cardsToSwitch),console.log("\n"),l.priorMove="Computer Switched",setTimeout((()=>{u(7)}),500)}else if("Defend"===a)console.log("Computer Is Defending"),r.isDefending=!0,l.isDefending=!1,r.overallDefends+=1,setTimeout((()=>{u(8)}),500);else{document.documentElement.style.setProperty("--battleStationHalfWidth",-n.clientWidth/4+"px"),e.classList.add("comp-atk-movement");const a=A("computer","Attack");console.log("Computer Attack: ",a),console.log("\n"),"Miss!"===a?(r.overallMisses+=1,"supra"===r.mainBattleCard.cate?r.supraMisses.push(a):"fere"===r.mainBattleCard.cate?r.fereMisses.push(a):"bonum"===r.mainBattleCard.cate&&r.bonumMisses.push(a)):r.overallAttacks+=1,setTimeout((()=>{const n=document.createElement("div");n.classList.add("user-damage-container"),n.textContent=a,t.appendChild(n),Q(a,t,l,r),l.isDefending=!1,u(2)}),500)}}function y(){console.log("User Is Defending"),l.isDefending=!0,l.priorMove="Defend",r.isDefending=!1,l.overallDefends+=1,setTimeout((()=>{u(8)}),500),setTimeout((()=>{v()}),1e3)}function Q(n,e,t,a){if("Miss!"===n);else{let o=n.slice(0,2);o=Number(o),o===a.mainBattleCard.atk?t.isDefending||e.classList.add("critical-hit-damage"):t.isDefending?e.classList.add("regular-hit-damage-def"):e.classList.add("regular-hit-damage")}}function I(n){if(1===n){const n=document.getElementById("content");if(n.replaceChildren(),console.log(n),console.log("If control 1: Loading up the computer deck."),d=[...s()],0!==d.length){console.log("Battle Arena will initiated in 10 seconds"),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("loading-room-content"),n.appendChild(e)}();const e=document.querySelector(".loading-room-content");e.textContent="Loading...",setTimeout((()=>{n.removeChild(e),G(),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("battle-arena-content"),n.appendChild(e)}(),u(null)}),1e4)}}}const w=t.p+"dbf02cd316d6e0919e46.svg";function k(n){const e=document.getElementById("content"),t=document.querySelector(".shuffle-cards-content"),a=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),o=document.querySelector(".display-number-of-shuffles"),i=document.querySelector(".shuffle-cards-content > button:nth-child(4)");0===n?(t.replaceChildren(),S(),M(),q(),T()):1===n?(t.removeChild(a),t.removeChild(o),t.removeChild(i),M(),q(),T()):null===n&&(e.replaceChildren(),G(),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("shuffle-cards-content"),n.appendChild(e)}(),S(),M(),q(),T())}function S(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("div");e.classList.add("display-shuffled-cards");for(let n=0;n<4;n++){const t=document.createElement("div");e.appendChild(t),0===i.length?t.textContent="No Card":(t.textContent=`${i[n].name}`,t.addEventListener("click",E))}n.appendChild(e)}function E(n){const e=document.getElementById("content"),t=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),a=document.querySelector(".shuffle-cards-content > button:nth-child(4)"),o=document.querySelector(".display-shuffled-cards"),i=document.querySelector(".in-game-menu-content > div > img[src]");o.classList.add("no-clicks"),i.classList.add("no-clicks"),t.disabled=!0,a.disabled=!0;const r=document.createElement("div");r.classList.add("view-card"),r.classList.add("open-view-card");const s=document.createElement("div"),d=document.createElement("img");d.alt="View Card Close Button",d.src=w,d.addEventListener("click",D);const l=document.createElement("div"),c=document.createElement("div");c.textContent=n.target.textContent,r.appendChild(s),r.appendChild(l),s.appendChild(d),l.appendChild(c),e.appendChild(r)}function D(n){const e=document.getElementById("content"),t=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),a=document.querySelector(".shuffle-cards-content > button:nth-child(4)"),o=document.querySelector(".display-shuffled-cards"),i=document.querySelector(".view-card"),r=document.querySelector(".in-game-menu-content > div > img[src]");i.classList.remove("open-view-card"),i.classList.add("close-view-card"),t.disabled=!1,a.disabled=!1,setTimeout((()=>{e.removeChild(i)}),500),setTimeout((()=>{r.classList.remove("no-clicks")}),600),setTimeout((()=>{o.classList.remove("no-clicks")}),700)}function M(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");e.textContent="Shuffle",e.addEventListener("click",Y),n.appendChild(e)}function Y(){l.endShuffles?k(1):(document.querySelector(".shuffle-cards-content > button:nth-child(2)").disabled=!0,document.querySelector(".shuffle-cards-content > button:nth-child(4)").disabled=!0,i.length=0,i=o(),console.log("New User Deck: ",i),console.log("\n"),document.querySelectorAll(".display-shuffled-cards > div").forEach(((n,e)=>{switch(e){case 0:n.classList.add("shuffle-card-animation"),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),1e3);break;case 1:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),1e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),2e3);break;case 2:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),2e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),3e3);break;case 3:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),3e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),4e3);break;default:return}})),setTimeout((()=>{k(0)}),5e3))}function q(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("div");e.classList.add("display-number-of-shuffles"),e.textContent=`Shuffles: ${l.numOfShuffles}`,l.numOfShuffles>=3?(e.classList.add("shuffle-limit-reached"),l.endShuffles=!0):l.numOfShuffles++,n.appendChild(e)}function T(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");e.textContent="Start Game",e.addEventListener("click",L),n.appendChild(e)}function L(){I(1)}function U(){j(),i.length=0,l.numOfShuffles=0}const W=t.p+"1974281497a4a5f57ef0.svg";function j(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("main-menu-content"),n.appendChild(e),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("h1");e.textContent="STRIVE",n.appendChild(e)}(),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("button");e.textContent="Quick Game",e.addEventListener("click",P),n.appendChild(e)}(),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("button");e.textContent="Settings",n.appendChild(e)}(),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("button");e.textContent="SoSu Studio",n.appendChild(e)}()}function P(){k(null)}function G(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("in-game-menu-content");const t=document.createElement("div"),a=document.createElement("img");a.src=W,a.addEventListener("click",N),t.appendChild(a),e.appendChild(t),n.appendChild(e)}function N(n){n.target.className="rotate-in-game-menu";const e=document.getElementById("content");document.querySelector(".in-game-menu-content > div > img[src]").classList.add("no-clicks");const t=document.querySelectorAll(".shuffle-cards-content > button"),a=document.querySelectorAll(".shuffle-cards-content > div > div"),o=document.querySelectorAll(".battle-arena-content > div:nth-child(5) > button"),i=document.createElement("div");i.classList.add("in-game-menu-window"),i.classList.add("open-in-game-menu-window");const r=document.createElement("div"),s=document.createElement("img");s.src=w,s.addEventListener("click",z);const d=document.createElement("div");d.classList.add("in-game-menu-selection-container");const l=document.createElement("button");e.childNodes.forEach((n=>{console.log(n.className),"shuffle-cards-content"===n.className?(t.forEach((n=>{n.disabled=!0})),a.forEach((n=>{n.classList.add("no-clicks")})),document.documentElement.style.setProperty("--inGameMenuWindowY","-305px"),l.textContent="Back To Main Menu"):"battle-arena-content"===n.className&&(o.forEach((n=>{n.disabled=!0})),document.documentElement.style.setProperty("--inGameMenuWindowY","-381px"),l.textContent="Quit Game")})),l.addEventListener("click",H),r.appendChild(s),d.appendChild(l),i.appendChild(r),i.appendChild(d),e.appendChild(i)}function z(n){const e=document.getElementById("content"),t=document.querySelector(".in-game-menu-window");t.classList.remove("open-in-game-menu-window"),t.classList.add("close-in-game-menu-window");const a=document.querySelectorAll(".shuffle-cards-content > button"),o=document.querySelectorAll(".shuffle-cards-content > div > div"),i=document.querySelectorAll(".battle-arena-content > div:nth-child(5) > button"),r=document.querySelector(".in-game-menu-content > div > img[src]");r.classList.remove("rotate-in-game-menu"),setTimeout((()=>{e.removeChild(t),r.classList.remove("no-clicks"),e.childNodes.forEach((n=>{"shuffle-cards-content"===n.className?(a.forEach((n=>{n.disabled=!1})),o.forEach((n=>{n.classList.remove("no-clicks")}))):"battle-arena-content"===n.className&&i.forEach((n=>{n.disabled=!1}))}))}),2e3)}function O(n){const e=document.getElementById("content"),t=document.querySelector(".in-game-menu-content > div > img[src]"),a=document.querySelector(".in-game-menu-window"),o=document.querySelectorAll(".shuffle-cards-content > div > div"),i=document.querySelectorAll(".shuffle-cards-content > button");"ShuffleCardsContent"===n&&(o.forEach((n=>{n.classList.add("no-clicks")})),i.forEach((n=>{n.disabled=!0}))),t.classList.remove("rotate-in-game-menu"),t.classList.add("no-clicks"),a.classList.remove("open-in-game-menu-window"),a.classList.add("close-in-game-menu-window"),setTimeout((()=>{e.removeChild(a)}),2e3)}function H(n){const e=document.getElementById("content"),t=document.querySelector(".in-game-menu-content"),a=document.querySelector(".shuffle-cards-content"),o=document.querySelector(".battle-arena-content");"Back To Main Menu"===n.target.textContent?(O("ShuffleCardsContent"),setTimeout((()=>{e.removeChild(t),e.removeChild(a),U()}),2e3)):"Quit Game"===n.target.textContent&&(O("BattleArenaContent"),setTimeout((()=>{e.removeChild(t),e.removeChild(o),U()}),2e3))}const J=t.p+"ae039dd38d82f83f7e0f.wav",R=t.p+"775970b1d2e5786b8304.mp3";var $=t(72),F=t.n($),X=t(825),K=t.n(X),V=t(659),Z=t.n(V),_=t(56),nn=t.n(_),en=t(540),tn=t.n(en),an=t(113),on=t.n(an),rn=t(159),sn={};sn.styleTagTransform=on(),sn.setAttributes=nn(),sn.insert=Z().bind(null,"head"),sn.domAPI=K(),sn.insertStyleElement=tn(),F()(rn.A,sn),rn.A&&rn.A.locals&&rn.A.locals,console.log("|Strive Beta|"),console.log("Developer: SoSu Studios"),console.log("Programmer: IBE"),console.log("Start Date: July-24-2024"),console.log("\n"),j();const dn=document.getElementById("content"),ln=document.createElement("button");ln.textContent="Test Button",ln.addEventListener("click",(function(){I(1),new Audio(J)})),dn.appendChild(ln);const cn=document.createElement("button");cn.textContent="Test Main Menu Music",document.querySelector(".main-menu-content").appendChild(cn),cn.addEventListener("click",(function n(){const e=new Audio(R);e.play(),e.volume=.5,setTimeout((()=>{n()}),11500)})),console.log("|Practicing Programming Sequences|"),console.log("Play: ","that funky music"),console.log("Play: ","that funky music white boy!"),console.log("Play: ","funky music white boy!");const An=["do","re","me"];An.forEach((n=>console.log(n))),An.forEach((function(n){console.log(n)})),An.forEach(console.log),function(n){for(let t=0;t<n.length;t++)e=n[t],console.log("Oh Yes: ",e+2);var e}([2,3,4,2]),console.log("\n");const mn=function(n){const e=[];for(let t=0;t<n.length;t++){const a=n[t]+2;e.push(a)}return e}([1,2,3]);console.log(".map implementation: ",mn)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,