(()=>{"use strict";var e={159:(e,n,t)=>{t.d(n,{A:()=>s});var o=t(354),r=t.n(o),a=t(314),c=t.n(a)()(r());c.push([e.id,"/* body - The main body for the browser. */\nbody{\n    padding: 0;\n    margin: 0; \n}\n\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box;\n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* |Mobile Viewports| */\n@media screen and (max-width: 600px){\n    /* |Main Content| */\n    #content{\n        border: 1px solid red; \n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n\n        border: 1px solid blue;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        \n        border: 1px solid  orange; \n        margin-top: 10px;\n        padding: 3px;\n    }\n    .display-shuffled-cards{ /* Display Shuffled Cards */\n        border: 1px solid green; \n    }\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,0CAA0C;AAC1C;IACI,UAAU;IACV,SAAS;AACb;;AAEA,6CAA6C;AAC7C;IACI,sBAAsB;AAC1B;;AAEA,yKAAyK;AACzK,yKAAyK;AACzK,uBAAuB;AACvB;IACI,mBAAmB;IACnB;QACI,qBAAqB;QACrB,YAAY;IAChB;;IAEA,wBAAwB;IACxB;QACI,aAAa;QACb,sBAAsB;QACtB,mBAAmB;QACnB,SAAS;;QAET,sBAAsB;IAC1B;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;;QAET,yBAAyB;QACzB,gBAAgB;QAChB,YAAY;IAChB;IACA,yBAAyB,2BAA2B;QAChD,uBAAuB;IAC3B;AACJ",sourcesContent:["/* body - The main body for the browser. */\nbody{\n    padding: 0;\n    margin: 0; \n}\n\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box;\n}\n\n/************************************************************************************************************************************************************************/\n/************************************************************************************************************************************************************************/\n/* |Mobile Viewports| */\n@media screen and (max-width: 600px){\n    /* |Main Content| */\n    #content{\n        border: 1px solid red; \n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n\n        border: 1px solid blue;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        \n        border: 1px solid  orange; \n        margin-top: 10px;\n        padding: 3px;\n    }\n    .display-shuffled-cards{ /* Display Shuffled Cards */\n        border: 1px solid green; \n    }\n}"],sourceRoot:""}]);const s=c},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);o&&c[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),n.push(u))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},c=[],s=0;s<e.length;s++){var i=e[s],d=o.base?i[0]+o.base:i[0],u=a[d]||0,l="".concat(d," ").concat(u);a[d]=u+1;var p=t(l),f={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)n[p].references++,n[p].updater(f);else{var m=r(f,o);o.byIndex=s,n.splice(s,0,{identifier:l,updater:m,references:1})}c.push(l)}return c}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var s=t(a[c]);n[s].references--}for(var i=o(e,r),d=0;d<a.length;d++){var u=t(a[d]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=i}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;let o=[],r=[{name:"Tobo The Fighter",cate:"supra",atk:44,def:12,esse:100},{name:"The One From System",cate:"supra",atk:46,def:10,esse:100},{name:"Spunky With The Funky Draco",cate:"supra",atk:39,def:11,esse:100},{name:"The Trendsetter Rotao",cate:"fere",atk:25,def:18,esse:100},{name:"Allybelle",cate:"fere",atk:27,def:15,esse:100},{name:"The Experiment",cate:"fere",atk:24,def:13,esse:100},{name:"Dan The Prol",cate:"bonum",atk:19,def:22,esse:100},{name:"Mac The Rat",cate:"bonum",atk:13,def:28,esse:100},{name:"A Karen",cate:"bonum",atk:15,def:26,esse:100},{name:"The office Worker Ken",cate:"bonum",atk:16,def:25,esse:100}];function a(){o.length=0,function(){let e=[],n=[],t=[],a=[];r.forEach((o=>{"supra"===o.cate?e.push(o):"fere"===o.cate?n.push(o):"bonum"===o.cate&&t.push(o)})),o.push(e[function(e){return Math.floor(Math.random()*e.length)}(e)]),o.push(n[function(e){return Math.floor(Math.random()*e.length)}(n)]),a=function(e){let n=!1,t=[],o=Math.floor(Math.random()*e.length);for(t.push(o);!n;)o=Math.floor(Math.random()*e.length),t.includes(o)||(t.push(o),n=!0);return t}(t),a.forEach((e=>{o.push(t[e])})),console.log("The User Deck: ",o)}()}var c=t(72),s=t.n(c),i=t(825),d=t.n(i),u=t(659),l=t.n(u),p=t(56),f=t.n(p),m=t(540),A=t.n(m),h=t(113),C=t.n(h),y=t(159),b={};b.styleTagTransform=C(),b.setAttributes=f(),b.insert=l().bind(null,"head"),b.domAPI=d(),b.insertStyleElement=A(),s()(y.A,b),y.A&&y.A.locals&&y.A.locals,console.log("|Strive Beta|"),console.log("Developer: SoSu Studios"),console.log("Start Date: July-24-2024"),console.log("\n"),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("main-menu-content"),e.appendChild(n),function(){const e=document.querySelector(".main-menu-content"),n=document.createElement("h1");n.textContent="STRIVE",e.appendChild(n)}(),function(){const e=document.querySelector(".main-menu-content"),n=document.createElement("button");n.textContent="Quick Game",n.addEventListener("click",(()=>{console.log("TO: ShuffleCardsContent()")})),e.appendChild(n)}(),function(){const e=document.querySelector(".main-menu-content"),n=document.createElement("button");n.textContent="Settings",e.appendChild(n)}(),function(){const e=document.querySelector(".main-menu-content"),n=document.createElement("button");n.textContent="SoSu Studio",e.appendChild(n)}()}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("shuffle-cards-content"),e.appendChild(n)}(),function(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("div");n.classList.add("display-shuffled-cards"),e.appendChild(n)}(),function(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("button");n.textContent="Shuffle",n.addEventListener("click",a),e.appendChild(n)}(),function(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("button");n.textContent="Start Game",e.appendChild(n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,